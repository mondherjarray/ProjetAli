{"version":3,"file":"countup.js-angular2.umd.js.map","sources":["ng://countup.js-angular2/lib/count-up.directive.ts","ng://countup.js-angular2/lib/count-up.module.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport * as CountUp from 'countup.js';\n\n@Directive({\n  selector: '[countUp]'\n})\nexport class CountUpDirective implements OnChanges {\n\n  countUp: any;\n  // Optional extra configuration, such as easing.\n  @Input('countUp') options: any;\n\n  // Optional start value for the count. Defaults to zero.\n  @Input() startVal: number;\n\n  // the number to count to\n  @Input() endVal: number;\n\n  // Optional duration of the animation in seconds. Default is 2.\n  @Input() duration: number;\n\n  // Optional number of decimal places. Default is 2.\n  @Input() decimals: number;\n  \n  // Optional flag for specifying whether the element should re-animate when clicked.\n  // Default is true.\n  @Input() reanimateOnClick: boolean;\n\n  // Re-animate if preference is set.\n  @HostListener('click')\n  onClick() {\n    if (this.reanimateOnClick) {\n      this.animate();\n    }\n  }\n\n  // on-complete event emitter\n  @Output() complete = new EventEmitter<void>();\n\n  constructor(private el: ElementRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.endVal && changes.endVal.currentValue) {\n      this.countUp = this.createCountUp();\n      this.animate();\n    }\n  }\n\n  private createCountUp(): any {\n    const start = this.startVal || 0;\n    const duration = this.duration || 2;\n    const decimals = this.decimals || 0;\n\n    if (!this.duration) {\n      this.duration = duration;\n    }\n\n    // construct countUp\n    let countUp = new CountUp(this.el.nativeElement, start, this.endVal, decimals, duration, this.options);\n    const diff = Math.abs(this.endVal - start);\n    // make easing smoother for large numbers\n    if (diff > 999) {\n      const up = (this.endVal > start) ? -1 : 1;\n      countUp = new CountUp(this.el.nativeElement, start, this.endVal + (up * 100), decimals, duration / 2, this.options);\n    }\n\n    return countUp;\n  }\n\n  private animate() {\n    this.countUp.reset();\n    if (this.endVal > 999) {\n      this.countUp.start(() => this.countUp.update(this.endVal));\n      setTimeout(() => {\n        this.complete.emit();\n      }, this.duration * 1000);\n    } else {\n      this.countUp.start(() => {\n        this.complete.emit();\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CountUpDirective } from './count-up.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [CountUpDirective],\n  exports: [CountUpDirective]\n})\nexport class CountUpModule { }\n"],"names":["EventEmitter","Directive","ElementRef","Input","HostListener","Output","NgModule"],"mappings":";;;;;;;;;;AAAA;QAgDE,0BAAoB,EAAc;YAAd,OAAE,GAAF,EAAE,CAAY;;YAFxB,aAAQ,GAAG,IAAIA,iBAAY,EAAQ,CAAC;SAER;;;;;;QATtC,kCAAO;;;;;YADP;gBAEE,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACzB,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;aACF;;;;;QAOD,sCAAW;;;;YAAX,UAAY,OAAsB;gBAChC,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE;oBACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;oBACpC,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;aACF;;;;QAEO,wCAAa;;;YAArB;;oBACQ,KAAK,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC;;oBAC1B,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC;;oBAC7B,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC;gBAEnC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;iBAC1B;;;oBAGG,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC;;oBAChG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;gBAE1C,IAAI,IAAI,GAAG,GAAG,EAAE;;wBACR,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC;oBACzC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,QAAQ,EAAE,QAAQ,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;iBACrH;gBAED,OAAO,OAAO,CAAC;aAChB;;;;QAEO,kCAAO;;;YAAf;gBAAA,iBAYC;gBAXC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;gBACrB,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE;oBACrB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,GAAA,CAAC,CAAC;oBAC3D,UAAU,CAAC;wBACT,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;qBACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;iBAC1B;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;wBACjB,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;qBACtB,CAAC,CAAC;iBACJ;aACF;;oBA9EFC,cAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;qBACtB;;;;wBAZCC,eAAU;;;;8BAiBTC,UAAK,SAAC,SAAS;+BAGfA,UAAK;6BAGLA,UAAK;+BAGLA,UAAK;+BAGLA,UAAK;uCAILA,UAAK;8BAGLC,iBAAY,SAAC,OAAO;+BAQpBC,WAAM;;QA6CT,uBAAC;KA/ED;;;;;;ACZA;QAGA;SAK8B;;oBAL7BC,aAAQ,SAAC;wBACR,OAAO,EAAE,EAAE;wBACX,YAAY,EAAE,CAAC,gBAAgB,CAAC;wBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;QAC4B,oBAAC;KAL9B;;;;;;;;;;;;;;;;;;;;;;;"}
